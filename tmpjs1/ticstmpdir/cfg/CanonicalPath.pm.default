##########################################################
# Custom Canonical Path Template
# COPYRIGHT 2007-2008, TIOBE Software B.V.
# $Id: CanonicalPath.pm.default 28102 2014-12-02 08:22:48Z stappers $
# $URL: svn+ssh://andriopoulou@esp.tiobe.com/home/wilde/svnrepository/tics/trunk/configuration/installTICS/CanonicalPath.pm.default $
##########################################################

##########################################################
# To enable custom canonical path functiality do the following:
# 1) Implement sub GetCanonicalPath ($) below.
# 2) Save this file as CanonicalPath.pm in the TICS (cfg) directory.
##########################################################

package CanonicalPath;

use strict;
use warnings;

##########################################################
# Add any required packages here. E.g.,
#use POSIX;
#use TICSSystem;
use TIOBEFiles;
##########################################################

##########################################################
# Implement the following function.
# Get the canonical path for the give file or directory name.
# Requirements:
# (1) Different representations of the same path name should give the
# same canonical path.
# (2) A canonical path should be unique: no two distinct paths should
# result in the same canonical path.
# (3) The canonical path should be operating system/platform
# independent. I.e., determining the canonical path for a given file on
# Windows and Unix should give the same result (modulo some fixed root
# part). Therefore, TICS standardizes on '/' for the directory separator.
# (4) Canonical path is case _sensitive_.
# in $path: the name of the file or directory to canonize.
# in $dosubst (optional): indicates if "subst" drive letters should be
# expanded on Windows. The default is to expand "subst" drive letters.
# Example: for 'subst q: c:\codearchive',
# &TIOBEFiles::CanonicalPath('q:\mypath') would give
# 'c:/codearchive/mypath' and TIOBEFiles::CanonicalPath('q:\mypath, 0)
# would give 'q:/mypath' (no expansion). Here, one can override this
# behaviour.
# return: The canonical name of the given path.
##########################################################
sub GetCanonicalPath ($;$) {
  my $path = shift;
  my $dosubst = shift;
  my $cpath;

##########################################################
# 1. Default implementation: defer to standard canonical path.
##########################################################
  $cpath = &TIOBEFiles::CanonicalPath($path, $dosubst);
##########################################################
# 2. Add debug logging. This is a trick to peek into the TICS internals.
# Useful for debugging complex problems in the field. Reserved log ids
# 7000 through 7005 can be used to log custom messages with log levels 0
# to 5 respectively.
##########################################################
#  &TICSSystem::PrintLog(7000, "--DEBUG-- in=[$path] out=[$cpath]);
##########################################################
  return $cpath;
}

sub CatFile ($$) {
  my $prefix = shift;
  my $path = shift;

  return &TIOBEFiles::CatFile($prefix, $path);
}

sub CatDir ($$) {
  my $prefix = shift;
  my $path = shift;

  return &TIOBEFiles::CatDir($prefix, $path);
}

1;
