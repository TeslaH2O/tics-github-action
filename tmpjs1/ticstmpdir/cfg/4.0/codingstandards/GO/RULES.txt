GOCS101	1	Naming	check package name
GOCS102	1	Naming	check Go names
GOCS103	1	Naming/errors	check variable/error name, capitalization and punctuation
GOCS104	1	Zero-value/type-inference	check declaration of variables
GOCS105	1	Range-loop	check values in range
GOCS106	1	Unexported-type-in-api	check unexported return type of exported function/method
GOCS107	1	Unary-op/errors	check syntax
GOCS108	1	Context	check usage of basic type as key in context.Withvalue
GOCS109	1	Naming	check naming for stutter
GOCS110	1	Comments	check exports for comments/declarations
GOCS111	1	Imports	check usage of imports
GOCS112	1	Indent	check necessity of else statement indentation
GOCS113	1	Comments	check package comment
GOCS114	1	Time	check usage of unit-specific suffix/prefix
GOCS115	1	Arg-ord	check order of arguments

GOCS201	1	Style	check for useless assignments
GOCS202	1	Style	check for common mistaken usages of the sync/atomic package
GOCS203	1	Style	check for mistakes involving boolean operators
GOCS204	1	Style	check for badly formed or misplaced +build tags
GOCS205	1	Style	check for types that may not be passed to cgo calls
GOCS206	1	Style	check that composite literals used field-keyed elements
GOCS207	1	Style	check that locks are not passed by value
GOCS209	1	Style	check for failure to call cancelation function returned by context.WithCancel
GOCS210	1	Style	check that canonically named methods are canonically defined
GOCS211	1	Style	check for comparisons between functions and nil
GOCS212	1	Style	check printf-like invocations
GOCS213	1	Style	check that range loop variables are used correctly
GOCS214	1	Style	check for shadowed variables
GOCS215	1	Style	check for useless shifts
GOCS216	1	Style	check that struct field tags have canonical format and apply to exported fields as needed
GOCS217	1	Style	check for common mistaken usages of tests/documentation examples
GOCS218	1	Style	check for unreachable code
GOCS219	1	Style	check for misuse of unsafe.Pointer
GOCS220	1	Style	check for unused result of calls to functions and methods