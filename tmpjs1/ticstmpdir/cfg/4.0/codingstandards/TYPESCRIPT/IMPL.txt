ban-ts-comment	eslint	@typescript-eslint/ban-ts-comment
no-debugger	eslint	no-debugger
no-implied-eval	eslint	@typescript-eslint/no-implied-eval
no-switch-case-fall-through	eslint	no-fallthrough
no-unsafe-call	eslint	@typescript-eslint/no-unsafe-call
no-unsafe-member-access	eslint	@typescript-eslint/no-unsafe-member-access
no-unsafe-return	eslint	@typescript-eslint/no-unsafe-return
no-with-statement	eslint	no-with

no-duplicate-super	eslint	constructor-super

await-promise	eslint	@typescript-eslint/await-thenable
explicit-module-boundary-types	eslint	@typescript-eslint/explicit-module-boundary-types
no-async-without-await	eslint	@typescript-eslint/require-await
no-empty-interface	eslint	@typescript-eslint/no-empty-interface
no-for-in-array	eslint	@typescript-eslint/no-for-in-array
no-floating-promises	eslint	@typescript-eslint/no-floating-promises
no-loss-of-precision	eslint	@typescript-eslint/no-loss-of-precision
no-internal-module	eslint	@typescript-eslint/prefer-namespace-keyword
no-misused-new	eslint	@typescript-eslint/no-misused-new
no-extra-non-null-assertion	eslint	@typescript-eslint/no-extra-non-null-assertion
no-non-null-assertion	eslint	@typescript-eslint/no-non-null-assertion
no-non-null-asserted-optional-chain	eslint	@typescript-eslint/no-non-null-asserted-optional-chain
no-promise-as-boolean	eslint	@typescript-eslint/no-misused-promises
no-this-assignment	eslint	@typescript-eslint/no-this-alias
no-unbound-method	eslint	@typescript-eslint/unbound-method
no-unnecessary-type-assertion	eslint	@typescript-eslint/no-unnecessary-type-assertion
no-unnecessary-type-constraint	eslint	@typescript-eslint/no-unnecessary-type-constraint
no-unused-variable	eslint	@typescript-eslint/no-unused-vars
prefer-array-literal	eslint	@typescript-eslint/no-array-constructor
prefer-as-const	eslint	@typescript-eslint/prefer-as-const
prefer-regexp-exec	eslint	@typescript-eslint/prefer-regexp-exec
restrict-plus-operands	eslint	@typescript-eslint/restrict-plus-operands
restrict-template-expressions	eslint	@typescript-eslint/restrict-template-expressions

no-reference	eslint	@typescript-eslint/triple-slash-reference
no-var-requires	eslint	@typescript-eslint/no-var-requires

label-position	eslint	no-unused-labels
no-conditional-assignment	eslint	no-cond-assign
no-constant-condition	eslint	no-constant-condition
no-control-regex	eslint	no-control-regex
no-duplicate-switch-case	eslint	no-duplicate-case
no-empty	eslint	no-empty
no-invalid-regexp	eslint	no-invalid-regexp
no-regex-spaces	eslint	no-regex-spaces
no-sparse-arrays	eslint	no-sparse-arrays
no-unsafe-finally	eslint	no-unsafe-finally
typeof-compare	eslint	valid-typeof
use-isnan	eslint	use-isnan

adjacent-overload-signatures	eslint	@typescript-eslint/adjacent-overload-signatures
ban-types	eslint	@typescript-eslint/ban-types
no-any	eslint	@typescript-eslint/no-explicit-any
no-inferrable-types	eslint	@typescript-eslint/no-inferrable-types
no-empty-function	eslint	@typescript-eslint/no-empty-function
no-extra-semi	eslint	@typescript-eslint/no-extra-semi
no-namespace	eslint	@typescript-eslint/no-namespace
no-unsafe-argument	eslint	@typescript-eslint/no-unsafe-argument
no-unsafe-assignment	eslint	@typescript-eslint/no-unsafe-assignment
no-delete-expression	eslint	no-delete-var