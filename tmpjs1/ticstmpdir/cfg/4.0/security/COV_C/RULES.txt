// Coverity 2022.03 and below
COV_C_CHROOT	2	API usage errors	If a call to chroot is not followed by a call to chdir("/") the chroot jail confinement can be violated

COV_C_BUFFER_SIZE_WARNING_01	2	Buffers	If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur

COV_C_OPEN_ARGS	3	File Creation	The permissions on the file created will be arbitrary and possibly insecure.

COV_C_AUDIT.SPECULATIVE_EXECUTION_DATA_LEAK	1	High impact security	If an attacker can control the value compared against the speculative memory access they might be able to read the process' memory.
COV_C_OS_CMD_INJECTION	1	High impact security	A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources.
COV_C_PATH_MANIPULATION	1	High impact security	An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application.
COV_C_SQLI	1	High impact security	A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database.
COV_C_UNENCRYPTED_SENSITIVE_DATA	1	High impact security	Attackers can read the sensitive data from the cookie with widely available tools.
COV_C_WEAK_GUARD	1	High impact security	An attacker that compromises a DNS server or pollutes its cache can bypass this check.
COV_C_WEAK_PASSWORD_HASH	1	High impact security	An attacker may recover passwords with feasible amounts of computational effort.
COV_C_XSS	1	High impact security	A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events.
COV_C_Y2K38_SAFETY	1	High impact quality	The time value stored in this integer will represent a different, but possibly valid, time.

COV_C_HARDCODED_CREDENTIALS	2	Medium impact security	Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application.
COV_C_HEADER_INJECTION	2	Medium impact security	An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value.
COV_C_SENSITIVE_DATA_LEAK	2	Medium impact security	Exception error messages and stack traces may leak information useful for attacking the application.
COV_C_URL_MANIPULATION	2	Medium impact security	An attacker may access unintended files or make the application access a malicious website.
COV_C_XPATH_INJECTION	2	Medium impact security	An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality.

COV_C_UNSAFE_XML_PARSE_CONFIG	2	Miscellaneous	Unsafe XML parsing configuration is vulnerable to various attacks, such as XML external entity attack, billion laughs attack, XML parsing recovery error attack, Xinclude attack.

COV_C_TAINTED_SCALAR_01	2	Scalars	The array index could be controlled by an attacker, leading to reads outside the bounds of the array

COV_C_BUFFER_SIZE_04	3	Security best practices violations	Incorrect buffer manipulation using the wrong sizes may result in buffer overflow
COV_C_DC.PREDICTABLE_KEY_PASSWORD	3	Security best practices violations	Detects calls to crypto APIs that result in the generation of weak or predictable keys
COV_C_DC.STREAM_BUFFER	3	Security best practices violations	Detects calls to unsafe I/O functions that are accessing a stream buffer (specifically, scanf, fscanf, gets) that could cause buffer overflow
COV_C_DC.STRING_BUFFER	3	Security best practices violations	Detects calls to functions that are accessing string buffers (sprintf, sscanf, strcat, strcpy, and __builtin___sprintf_chk) that could cause buffer overflow
COV_C_DC.WEAK_CRYPTO	3	Security best practices violations	Detects calls to functions that produce unsafe sequences of pseudo-random numbers
COV_C_FORMAT_STRING_INJECTION	3	Security best practices violations	A non-constant format string can potentially be exploited by a user to take control of the application.
COV_C_PW.NON_CONST_PRINTF_FORMAT_STRING	3	Security best practices violations	A non-constant printf format string may be susceptible to format string attacks
COV_C_RISKY_CRYPTO_01	3	Security best practices violations	A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data
COV_C_SECURE_CODING	3	Security best practices violations	Calling a function which may pose a security risk if it is used inappropriately
COV_C_SECURE_TEMP	3	Security best practices violations	Using an insecure temporary file creation function
COV_C_TAINTED_STRING_WARNING_01	3	Security best practices violations	A non-constant string used to construct a format string
COV_C_TOCTOU	3	Security best practices violations	A check occurs on a file's attributes before the file is used in a privileged operation, but things may have changed
COV_C_USER_POINTER	3	Security best practices violations	A user-land pointer is dereferenced without safety checks in the kernel

COV_C_STRING_NULL	2	Strings	The function may iterate past the end of the buffer looking for a null terminator
COV_C_STRING_OVERFLOW_01	2	Strings	he string operation will write past the end of the fixed-size destination buffer if the source buffer is too large
COV_C_STRING_SIZE	2	Strings	The string operation can write past the end of the fixed-size destination buffer if the source buffer is too large
COV_C_TAINTED_STRING_01	2	Strings	An attacker could craft a format string containing unexpected formatting directives and force a buffer overflow, which may be used to take control of the application
