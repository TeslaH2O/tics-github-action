OBJECTIVEC.Gcc-Wabi	5	Compiler warning	Warn when G++ generates code that is probably not compatible with the vendor-neutral C++ ABI.
OBJECTIVEC.Gcc-Waddress	2	Compiler warning	Warn about suspicious uses of memory addresses.
OBJECTIVEC.Gcc-Waggregate-return	4	Compiler warning	Warn if any functions that return structures or unions are defined or called.
OBJECTIVEC.Gcc-Warray-bounds	9	Compiler warning	This option is only active when -ftree-vrp is active (default for -O2 and above).
OBJECTIVEC.Gcc-Wassign-intercept	1	Compiler warning	Warn whenever an Objective-C assignment is being intercepted by the garbage collector.
OBJECTIVEC.Gcc-Wbad-function-cast	1	Compiler warning	Warn whenever a function call is cast to a non-matching type.
OBJECTIVEC.Gcc-Wc++-compat	3	Compiler warning	Warn about ISO C constructs that are outside of the common subset of ISO C and ISO C++.
OBJECTIVEC.Gcc-Wc++11-compat	3	Compiler warning	Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011.
OBJECTIVEC.Gcc-Wcast-align	3	Compiler warning	Warn whenever a pointer is cast such that the required alignment of the target is increased.
OBJECTIVEC.Gcc-Wcast-qual	4	Compiler warning	Warn whenever a pointer is cast so as to remove a type qualifier from the target type.
OBJECTIVEC.Gcc-Wchar-subscripts	2	Compiler warning	Warn if an array subscript has type "char".
OBJECTIVEC.Gcc-Wclobbered	2	Compiler warning	Warn for variables that might be changed by longjmp or vfork.
OBJECTIVEC.Gcc-Wcomment	3	Compiler warning	Warn whenever a comment-start sequence /* appears in a /* comment, or whenever a backslash-newline appears in a // comment.
OBJECTIVEC.Gcc-Wconversion	2	Compiler warning	Warn for implicit conversions that may alter a value.
OBJECTIVEC.Gcc-Wcpp	1	Compiler warning	Warning messages emitted by "#warning" directives.
OBJECTIVEC.Gcc-Wctor-dtor-privacy	2	Compiler warning	Warn when a class seems unusable because all the constructors or destructors in that class are private, and it has neither friends nor public static member functions.
OBJECTIVEC.Gcc-Wdeclaration-after-statement	2	Compiler warning	Warn when a declaration is found after a statement in a block.
OBJECTIVEC.Gcc-Wdelete-non-virtual-dtor	2	Compiler warning	Warn when delete is used to destroy an instance of a class that has virtual functions and non-virtual destructor.
OBJECTIVEC.Gcc-Wdisabled-optimization	5	Compiler warning	Warn if a requested optimization pass is disabled.
OBJECTIVEC.Gcc-Wdouble-promotion	3	Compiler warning	Give a warning when a value of type "float" is implicitly promoted to "double".
OBJECTIVEC.Gcc-Wempty-body	2	Compiler warning	Warn if an empty body occurs in an if, else or do while statement.
OBJECTIVEC.Gcc-Wendif-labels	1	Compiler warning	Warn whenever an #else or an #endif are followed by text.
OBJECTIVEC.Gcc-Wenum-compare	1	Compiler warning	Warn about a comparison between values of different enumerated types.
OBJECTIVEC.Gcc-Wfloat-equal	2	Compiler warning	Warn if floating-point values are used in equality comparisons.
OBJECTIVEC.Gcc-Wformat	2	Compiler warning	Check calls to "printf" and "scanf", etc.
OBJECTIVEC.Gcc-Wformat-y2k	8	Compiler warning	If -Wformat is specified, also warn about "strftime" formats that may yield only a two-digit year.
OBJECTIVEC.Gcc-Wframe-larger-than	4	Compiler warning	Warn if the size of a function frame is larger than len bytes.
OBJECTIVEC.Gcc-Wignored-qualifiers	3	Compiler warning	Warn if the return type of a function has a type qualifier such as "const".
OBJECTIVEC.Gcc-Wimplicit-function-declaration	3	Compiler warning	Give a warning whenever a function is used before being declared.
OBJECTIVEC.Gcc-Wimplicit-int	3	Compiler warning	Warn when a declaration does not specify a type.
OBJECTIVEC.Gcc-Wincomplete-umbrella	6	Compiler warning	Umbrella header for module does not include header.
OBJECTIVEC.Gcc-Winit-self	2	Compiler warning	Warn about uninitialized variables that are initialized with themselves.
OBJECTIVEC.Gcc-Winline	2	Compiler warning	Warn if a function that is declared as inline cannot be inlined.
OBJECTIVEC.Gcc-Winvalid-pch	3	Compiler warning	Warn if a precompiled header is found in the search path but can't be used.
OBJECTIVEC.Gcc-Wjump-misses-init	1	Compiler warning	Warn if a "goto" statement or a "switch" statement jumps forward across the initialization of a variable, or jumps backward to a label after the variable has been initialized.
OBJECTIVEC.Gcc-Wlarger-than	2	Compiler warning	Warn whenever an object of larger than len bytes is defined.
OBJECTIVEC.Gcc-Wliteral-suffix	3	Compiler warning	Warn when a string or character literal is followed by a ud-suffix which does not begin with an underscore.
OBJECTIVEC.Gcc-Wlogical-op	3	Compiler warning	Warn about suspicious uses of logical operators in expressions.
OBJECTIVEC.Gcc-Wlong-long	5	Compiler warning	Warn if long long type is used.
OBJECTIVEC.Gcc-Wmain	4	Compiler warning	Warn if the type of main is suspicious.
OBJECTIVEC.Gcc-Wmaybe-uninitialized	2	Compiler warning	For an automatic variable, if there exists a path from the function entry to a use of the variable that is initialized, but there exist some other paths for which the variable is not initialized, the compiler emits a warning if it cannot prove the uninitialized paths are not executed at run time.
OBJECTIVEC.Gcc-Wmissing-braces	2	Compiler warning	Warn if an aggregate or union initializer is not fully bracketed.
OBJECTIVEC.Gcc-Wmissing-declarations	4	Compiler warning	Warn if a global function is defined without a previous declaration.
OBJECTIVEC.Gcc-Wmissing-field-initializers	2	Compiler warning	Warn if a structure's initializer has some fields missing.
OBJECTIVEC.Gcc-Wmissing-include-dirs	1	Compiler warning	Warn if a user-supplied include directory does not exist.
OBJECTIVEC.Gcc-Wmissing-prototype	5	Compiler warning	warnings are issued for function templates, or for inline functions, or for functions in anonymous namespaces.
OBJECTIVEC.Gcc-Wmissing-prototypes	4	Compiler warning	Warn if a global function is defined without a previous prototype declaration.
OBJECTIVEC.Gcc-Wnarrowing	3	Compiler warning	Warn when a narrowing conversion prohibited by C++11 occurs within { }.
OBJECTIVEC.Gcc-Wnested-externs	2	Compiler warning	Warn if an "extern" declaration is encountered within a function.
OBJECTIVEC.Gcc-Wnoexcept	3	Compiler warning	Warn when a noexcept-expression evaluates to false because of a call to a function that does not have a non-throwing exception specification (i.
OBJECTIVEC.Gcc-Wnon-virtual-dtor	2	Compiler warning	Warn when a class has virtual functions and an accessible non- virtual destructor, in which case it is possible but unsafe to delete an instance of a derived class through a pointer to the base class.
OBJECTIVEC.Gcc-Wnonnull	1	Compiler warning	Warn about passing a null pointer for arguments marked as requiring a non-null value by the "nonnull" function attribute.
OBJECTIVEC.Gcc-Wnormalized	4	Compiler warning	In ISO C and ISO C++, two identifiers are different if they are different sequences of characters.
OBJECTIVEC.Gcc-Wold-style-cast	3	Compiler warning	Warn if an old-style (C-style) cast to a non-void type is used within a C++ program.
OBJECTIVEC.Gcc-Wold-style-declaration	3	Compiler warning	Warn for obsolescent usages, according to the C Standard, in a declaration.
OBJECTIVEC.Gcc-Wold-style-definition	3	Compiler warning	Warn if an old-style function definition is used.
OBJECTIVEC.Gcc-Woverlength-strings	1	Compiler warning	Warn about string constants that are longer than the "minimum maximum" length specified in the C standard.
OBJECTIVEC.Gcc-Woverloaded-virtual	2	Compiler warning	Warn when a function declaration hides virtual functions from a base class.
OBJECTIVEC.Gcc-Woverride-init	2	Compiler warning	Warn if an initialized field without side effects is overridden when using designated initializers.
OBJECTIVEC.Gcc-Wpacked	4	Compiler warning	Warn if a structure is given the packed attribute, but the packed attribute has no effect on the layout or size of the structure.
OBJECTIVEC.Gcc-Wpacked-bitfield-compat	4	Compiler warning	The 4.
OBJECTIVEC.Gcc-Wpadded	6	Compiler warning	Warn if padding is included in a structure, either to align an element of the structure or to align the whole structure.
OBJECTIVEC.Gcc-Wparentheses	6	Compiler warning	Warn if parentheses are omitted in certain contexts, such as when there is an assignment in a context where a truth value is expected, or when operators are nested whose precedence people often get confused about.
OBJECTIVEC.Gcc-Wpedantic	3	Compiler warning	Issue all the warnings demanded by strict ISO C and ISO C++; reject all programs that use forbidden extensions, and some other programs that do not follow ISO C and ISO C++.
OBJECTIVEC.Gcc-Wpointer-arith	7	Compiler warning	Warn about anything that depends on the "size of" a function type or of "void".
OBJECTIVEC.Gcc-Wpointer-sign	2	Compiler warning	Warn for pointer argument passing or assignment with different signedness.
OBJECTIVEC.Gcc-Wprotocol	4	Compiler warning	Warn for every method in the protocol that is not implemented by the class, if the class is declared to implement a protocol.
OBJECTIVEC.Gcc-Wredundant-decls	3	Compiler warning	Warn if anything is declared more than once in the same scope, even in cases where multiple declaration is valid and changes nothing.
OBJECTIVEC.Gcc-Wreorder	2	Compiler warning	Warn when the order of member initializers given in the code does not match the order in which they must be executed.
OBJECTIVEC.Gcc-Wreturn-type	7	Compiler warning	Warn whenever a function is defined with a return type that defaults to "int".
OBJECTIVEC.Gcc-Wselector	4	Compiler warning	Warn if multiple methods of different types for the same selector are found during compilation.
OBJECTIVEC.Gcc-Wsequence-point	3	Compiler warning	Warn about code that may have undefined semantics because of violations of sequence point rules in the C and C++ standards.
OBJECTIVEC.Gcc-Wshadow	3	Compiler warning	Warn whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed.
OBJECTIVEC.Gcc-Wsign-compare	2	Compiler warning	Warn when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned.
OBJECTIVEC.Gcc-Wsign-conversion	2	Compiler warning	Warn for implicit conversions that may change the sign of an integer value, like assigning a signed integer expression to an unsigned integer variable.
OBJECTIVEC.Gcc-Wsign-promo	2	Compiler warning	Warn when overload resolution chooses a promotion from unsigned or enumerated type to a signed type, over a conversion to an unsigned type of the same size.
OBJECTIVEC.Gcc-Wsizeof-pointer-memaccess	3	Compiler warning	Warn for suspicious length parameters to certain string and memory built-in functions if the argument uses "sizeof".
OBJECTIVEC.Gcc-Wstack-protector	8	Compiler warning	This option is only active when -fstack-protector is active.
OBJECTIVEC.Gcc-Wstack-usage	3	Compiler warning	Warn if the stack usage of a function might be larger than len bytes.
OBJECTIVEC.Gcc-Wstrict-aliasing	4	Compiler warning	It warns about code that might break the strict aliasing rules that the compiler is using for optimization.
OBJECTIVEC.Gcc-Wstrict-null-sentinel	3	Compiler warning	Warn about the use of an uncasted "NULL" as sentinel.
OBJECTIVEC.Gcc-Wstrict-overflow	4	Compiler warning	It warns about cases where the compiler optimizes based on the assumption that signed overflow does not occur.
OBJECTIVEC.Gcc-Wstrict-prototypes	3	Compiler warning	Warn if a function is declared or defined without specifying the argument types.
OBJECTIVEC.Gcc-Wstrict-selector-match	3	Compiler warning	Warn if multiple methods with differing argument and/or return types are found for a given selector when attempting to send a message using this selector to a receiver of type "id" or "Class".
OBJECTIVEC.Gcc-Wsuggest-attribute	6	Compiler warning	Warn for cases where adding an attribute may be beneficial.
OBJECTIVEC.Gcc-Wswitch	2	Compiler warning	Warn whenever a "switch" statement has an index of enumerated type and lacks a "case" for one or more of the named codes of that enumeration.
OBJECTIVEC.Gcc-Wswitch-default	3	Compiler warning	Warn whenever a "switch" statement does not have a "default" case.
OBJECTIVEC.Gcc-Wswitch-enum	2	Compiler warning	Warn whenever a "switch" statement has an index of enumerated type and lacks a "case" for one or more of the named codes of that enumeration.
OBJECTIVEC.Gcc-Wsync-nand	4	Compiler warning	Warn when "__sync_fetch_and_nand" and "__sync_nand_and_fetch" built-in functions are used.
OBJECTIVEC.Gcc-Wsystem-headers	5	Compiler warning	Issue warnings for code in system headers.
OBJECTIVEC.Gcc-Wtraditional	4	Compiler warning	Warn about certain constructs that behave differently in traditional and ISO C.
OBJECTIVEC.Gcc-Wtraditional-conversion	3	Compiler warning	Warn if a prototype causes a type conversion that is different from what would happen to the same argument in the absence of a prototype.
OBJECTIVEC.Gcc-Wtrampolines	3	Compiler warning	Warn about trampolines generated for pointers to nested functions.
OBJECTIVEC.Gcc-Wtrigraphs	3	Compiler warning	Most trigraphs in comments cannot affect the meaning of the program.
OBJECTIVEC.Gcc-Wtype-limits	2	Compiler warning	Warn if a comparison is always true or always false due to the limited range of the data type, but do not warn for constant expressions.
OBJECTIVEC.Gcc-Wundeclared-selector	4	Compiler warning	Warn if a "@selector(.
OBJECTIVEC.Gcc-Wundef	3	Compiler warning	Warn if an undefined identifier is evaluated in an #if directive.
OBJECTIVEC.Gcc-Wuninitialized	3	Compiler warning	Warn if an automatic variable is used without first being initialized or if a variable may be clobbered by a "setjmp" call.
OBJECTIVEC.Gcc-Wunknown-pragmas	3	Compiler warning	Warn when a "#pragma" directive is encountered that is not understood by GCC.
OBJECTIVEC.Gcc-Wunsafe-loop-optimizations	5	Compiler warning	Warn if the loop cannot be optimized because the compiler cannot assume anything on the bounds of the loop indices.
OBJECTIVEC.Gcc-Wunsuffixed-float-constants	7	Compiler warning	Issue a warning for any floating constant that does not have a suffix.
OBJECTIVEC.Gcc-Wunused-but-set-parameter	4	Compiler warning	Warn whenever a function parameter is assigned to, but otherwise unused (aside from its declaration).
OBJECTIVEC.Gcc-Wunused-but-set-variable	4	Compiler warning	Warn whenever a local variable is assigned to, but otherwise unused (aside from its declaration).
OBJECTIVEC.Gcc-Wunused-function	4	Compiler warning	Warn whenever a static function is declared but not defined or a non-inline static function is unused.
OBJECTIVEC.Gcc-Wunused-label	4	Compiler warning	Warn whenever a label is declared but not used.
OBJECTIVEC.Gcc-Wunused-local-typedefs	4	Compiler warning	Warn when a typedef locally defined in a function is not used.
OBJECTIVEC.Gcc-Wunused-macros	4	Compiler warning	Warn about macros defined in the main file that are unused.
OBJECTIVEC.Gcc-Wunused-parameter	5	Compiler warning	Warn whenever a function parameter is unused aside from its declaration.
OBJECTIVEC.Gcc-Wunused-value	2	Compiler warning	Warn whenever a statement computes a result that is explicitly not used.
OBJECTIVEC.Gcc-Wunused-variable	5	Compiler warning	Warn whenever a local variable or non-constant static variable is unused aside from its declaration.
OBJECTIVEC.Gcc-Wuseless-cast	5	Compiler warning	Warn when an expression is casted to its own type.
OBJECTIVEC.Gcc-Wvarargs	5	Compiler warning	Warn upon questionable usage of the macros used to handle variable arguments like va_start.
OBJECTIVEC.Gcc-Wvariadic-macros	5	Compiler warning	Warn if variadic macros are used in pedantic ISO C90 mode, or the GNU alternate syntax when in pedantic ISO C99 mode.
OBJECTIVEC.Gcc-Wvector-operation-performance	7	Compiler warning	Warn if vector operation is not implemented via SIMD capabilities of the architecture.
OBJECTIVEC.Gcc-Wvla	4	Compiler warning	Warn if variable length array is used in the code.
OBJECTIVEC.Gcc-Wvolatile-register-var	4	Compiler warning	Warn if a register variable is declared volatile.
OBJECTIVEC.Gcc-Wwrite-strings	5	Compiler warning	When compiling C, give string constants the type "const char[length]" so that copying the address of one into a non-"const" "char *" pointer produces a warning.
OBJECTIVEC.Gcc-Wzero-as-null-pointer-constant	6	Compiler warning	Warn when a literal '0' is used as null pointer constant.
OBJECTIVEC.Gcc-container	1	Compiler warning	Warning container.
OBJECTIVEC.Gcc-default	1	Compiler warning	Default warnings.

OBJECTIVEC.Gcc-Wdeprecated-declarations	4	Compiler warning	'item' is deprecated: first deprecated in iOS 8.3 - UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead.
OBJECTIVEC.Gcc-Wfloat-conversion	4	Compiler warning	Implicit conversion turns floating-point number into integer: 'item' (aka 'item').
OBJECTIVEC.Gcc-Wincomplete-implementation	3	Compiler warning	Method definition for 'item' not found.
OBJECTIVEC.Gcc-Wint-conversion	2	Compiler warning	Incompatible integer to pointer conversion assigning (aka 'item') (aka 'item').
OBJECTIVEC.Gcc-Wnon-literal-null-conversion	4	Compiler warning	Expression which evaluates to zero treated as a null pointer constant.
OBJECTIVEC.Gcc-Wsemicolon-before-method-body	2	Compiler warning	Semicolon before method body is ignored.
OBJECTIVEC.Gcc-Wshorten-64-to-32	3	Compiler warning	Implicit conversion loses integer precision: 'item'.
OBJECTIVEC.Gcc-Wtautological-pointer-compare	2	Compiler warning	Comparison of address not equal to a null pointer is always true.
OBJECTIVEC.Gcc-Wunused-property-ivar	4	Compiler warning	Ivar 'item' which backs the property is not referenced in this property's accessor.
