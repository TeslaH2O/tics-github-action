C.Gcc-Wabi	5	Compiler warning	Warn when G++ generates code that is probably not compatible with the vendor-neutral C++ ABI.
C.Gcc-Wabi-tag	5	Compiler warning	Warn if a subobject has an abi_tag attribute that the complete object type does not have.
C.Gcc-Waddress	2	Compiler warning	Warn about suspicious uses of memory addresses.
C.Gcc-Waggregate-return	4	Compiler warning	Warn if any functions that return structures or unions are defined or called.
C.Gcc-Waggressive-loop-optimizations	2	Compiler warning	Warn if a loop with constant number of iterations triggers undefined behavior.
C.Gcc-Waliasing	3	Compiler warning	Warn about possible aliasing of dummy arguments.
C.Gcc-Walign-commons	5	Compiler warning	Warn about alignment of COMMON blocks.
C.Gcc-Walloc-size-larger-than=	4	Compiler warning	Warn for calls to allocation functions that attempt to allocate objects larger than the specified number of bytes.
C.Gcc-Walloc-zero	1	Compiler warning	-Walloc-zero Warn for calls to allocation functions that specify zero bytes.
C.Gcc-Walloca	6	Compiler warning	Warn on any use of alloca.
C.Gcc-Wampersand	3	Compiler warning	Warn about missing ampersand in continued character constants.
C.Gcc-Wargument-mismatch	1	Compiler warning	Warn about type and rank mismatches between arguments and parameters.
C.Gcc-Warray-bounds	1	Compiler warning	This option is only active when -ftree-vrp is active (default for -O2 and above).
C.Gcc-Warray-temporaries	3	Compiler warning	Warn about creation of array temporaries.
C.Gcc-Wassign-intercept	6	Compiler warning	Warn whenever an Objective-C assignment is being intercepted by the garbage collector.
C.Gcc-Wattributes	4	Compiler warning	Warn about inappropriate attribute usage.
C.Gcc-Wbad-function-cast	2	Compiler warning	Warn whenever a function call is cast to a non-matching type.
C.Gcc-Wbool-compare	3	Compiler warning	Warn about boolean expression compared with an integer value different from true/false.
C.Gcc-Wbool-operation	4	Compiler warning	Warn about certain operations on boolean expressions.
C.Gcc-Wbuiltin-declaration-mismatch	2	Compiler warning	Warn when a built-in function is declared with the wrong signature.
C.Gcc-Wbuiltin-macro-redefined	2	Compiler warning	Warn when a built-in preprocessor macro is undefined or redefined.
C.Gcc-Wc++-compat	3	Compiler warning	Warn about ISO C constructs that are outside of the common subset of ISO C and ISO C++.
C.Gcc-Wc++11-compat	3	Compiler warning	Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011.
C.Gcc-Wc++14-compat	3	Compiler warning	Warn about C++ constructs whose meaning differs between ISO C++ 2011 and ISO C++ 2014.
C.Gcc-Wc++17-compat	3	Compiler warning	Warn about C++ constructs whose meaning differs between ISO C++ 2014 and ISO C++ 2017.
C.Gcc-Wc-binding-type	3	Compiler warning	Warn if the type of a variable might be not interoperable with C.
C.Gcc-Wc90-c99-compat	3	Compiler warning	Warn about features not present in ISO C90, but present in ISO C99.
C.Gcc-Wc99-c11-compat	3	Compiler warning	Warn about features not present in ISO C99, but present in ISO C11.
C.Gcc-Wcast-align	2	Compiler warning	Warn whenever a pointer is cast such that the required alignment of the target is increased.
C.Gcc-Wcast-qual	2	Compiler warning	Warn whenever a pointer is cast so as to remove a type qualifier from the target type.
C.Gcc-Wcast-result	2	Compiler warning	Warn about casts that will produce a null result.
C.Gcc-Wchar-subscripts	1	Compiler warning	Warn if an array subscript has type "char".
C.Gcc-Wcharacter-truncation	3	Compiler warning	Warn about truncated character expressions.
C.Gcc-Wchkp	1	Compiler warning	Warn about memory access errors found by Pointer Bounds Checker.
C.Gcc-Wclobbered	1	Compiler warning	Warn for variables that might be changed by longjmp or vfork.
C.Gcc-Wcomment	3	Compiler warning	Warn whenever a comment-start sequence /* appears in a /* comment, or whenever a Backslash-Newline appears in a // comment.
C.Gcc-Wcompare-reals	2	Compiler warning	Warn about equality comparisons involving REAL or COMPLEX expressions.
C.Gcc-Wconditionally-supported	5	Compiler warning	Warn for conditionally-supported constructs.
C.Gcc-Wconversion	2	Compiler warning	Warn for implicit conversions that may alter a value.
C.Gcc-Wconversion-extra	3	Compiler warning	Warn about most implicit conversions.
C.Gcc-Wconversion-null	1	Compiler warning	Warn for converting NULL from/to a non-pointer type.
C.Gcc-Wcoverage-mismatch	6	Compiler warning	Warn in case profiles in -fprofile-use do not match.
C.Gcc-Wcpp	1	Compiler warning	Warning messages emitted by "#warning" directives.
C.Gcc-Wctor-dtor-privacy	2	Compiler warning	Warn when a class seems unusable because all the constructors or destructors in that class are private, and it has neither friends nor public static member functions.
C.Gcc-Wdangling-else	3	Compiler warning	Warn about dangling else.
C.Gcc-Wdate-time	5	Compiler warning	Warn about __TIME__, __DATE__ and __TIMESTAMP__ usage.
C.Gcc-Wdeclaration-after-statement	3	Compiler warning	Warn when a declaration is found after a statement in a block.
C.Gcc-Wdelete-incomplete	1	Compiler warning	Warn when deleting a pointer to incomplete type.
C.Gcc-Wdelete-non-virtual-dtor	1	Compiler warning	Warn when delete is used to destroy an instance of a class that has virtual functions and non-virtual destructor.
C.Gcc-Wdeprecated	4	Compiler warning	Warn if a deprecated compiler feature, class, method, or field is used.
C.Gcc-Wdeprecated-declarations	6	Compiler warning	Warn about uses of functions, variables, and types marked as deprecated by using the "deprecated" attribute.
C.Gcc-Wdesignated-init	4	Compiler warning	Warn about positional initialization of structs requiring designated initializers.
C.Gcc-Wdisabled-optimization	5	Compiler warning	Warn if a requested optimization pass is disabled.
C.Gcc-Wdiscarded-array-qualifiers	4	Compiler warning	Warn if qualifiers on arrays which are pointer targets are discarded.
C.Gcc-Wdiscarded-qualifiers	4	Compiler warning	Warn if qualifiers are discarded because a const is passed to a function that does not take const arguments.
C.Gcc-Wdiv-by-zero	1	Compiler warning	Warn about compile-time integer division by zero.
C.Gcc-Wdouble-promotion	3	Compiler warning	Give a warning when a value of type "float" is implicitly promoted to "double".
C.Gcc-Wduplicate-decl-specifier	3	Compiler warning	Warn when a declaration has duplicate const, volatile, restrict or _Atomic specifier.
C.Gcc-Wduplicated-branches	1	Compiler warning	Warn about duplicated branches in if-else statements.
C.Gcc-Wduplicated-cond	1	Compiler warning	Warn about duplicated conditions in an if-else-if chain.
C.Gcc-Weffc++	5	Compiler warning	Warn about violations of Effective C++ style rules.
C.Gcc-Wempty-body	2	Compiler warning	Warn if an empty body occurs in an if, else or do while statement.
C.Gcc-Wendif-labels	2	Compiler warning	Warn whenever an #else or an #endif are followed by text.
C.Gcc-Wenum-compare	1	Compiler warning	Warn about a comparison between values of different enumerated types.
C.Gcc-Wexpansion-to-defined	2	Compiler warning	Warn if "defined" is used outside #if.
C.Gcc-Wfloat-conversion	3	Compiler warning	Warn for implicit type conversions that cause loss of floating point precision.
C.Gcc-Wfloat-equal	1	Compiler warning	Warn if floating-point values are used in equality comparisons.
C.Gcc-Wformat	1	Compiler warning	Check calls to "printf" and "scanf", etc.
C.Gcc-Wformat-contains-nul	2	Compiler warning	Warn about format strings that contain NUL bytes.
C.Gcc-Wformat-extra-args	1	Compiler warning	Warn if passing too many arguments to a function for its format string.
C.Gcc-Wformat-nonliteral	3	Compiler warning	If -Wformat is specified, also warn if the format string is not a string literal and so cannot be checked, unless the format function takes its format arguments as a "va_list".
C.Gcc-Wformat-overflow	1	Compiler warning	Warn about function calls with format strings that write past the end of the destination region.
C.Gcc-Wformat-security	4	Compiler warning	If -Wformat is specified, also warn about uses of format functions that represent possible security problems.
C.Gcc-Wformat-signedness	3	Compiler warning	Warn about sign differences with format functions.
C.Gcc-Wformat-truncation	5	Compiler warning	Warn about calls to snprintf and similar functions that truncate output.
C.Gcc-Wformat-y2k	6	Compiler warning	If -Wformat is specified, also warn about "strftime" formats that may yield only a two-digit year.
C.Gcc-Wformat-zero-length	3	Compiler warning	Warn about zero-length formats.
C.Gcc-Wframe-address	1	Compiler warning	Warn when __builtin_frame_address or __builtin_return_address is used unsafely.
C.Gcc-Wfree-nonheap-object	1	Compiler warning	Warn when attempting to free a non-heap object.
C.Gcc-Wfunction-elimination	3	Compiler warning	Warn about function call elimination.
C.Gcc-Whsa	5	Compiler warning	Warn when a function cannot be expanded to HSAIL.
C.Gcc-Wignored-attributes	4	Compiler warning	Warn whenever attributes are ignored.
C.Gcc-Wignored-qualifiers	4	Compiler warning	Warn if the return type of a function has a type qualifier such as "const".
C.Gcc-Wimplicit	3	Compiler warning	Warn about implicit declarations.
C.Gcc-Wimplicit-fallthrough	2	Compiler warning	Warn when a switch case falls through.
C.Gcc-Wimplicit-function-declaration	3	Compiler warning	Give a warning whenever a function is used before being declared.
C.Gcc-Wimplicit-int	3	Compiler warning	Warn when a declaration does not specify a type.
C.Gcc-Wimplicit-interface	3	Compiler warning	Warn about calls with implicit interface.
C.Gcc-Wimplicit-procedure	3	Compiler warning	Warn about called procedures not explicitly declared
C.Gcc-Wincompatible-pointer-types	2	Compiler warning	Warn when there is a conversion between pointers that have incompatible types.
C.Gcc-Winherited-variadic-ctor	4	Compiler warning	Warn about C++11 inheriting constructors when the base has a variadic constructor.
C.Gcc-Winit-self	1	Compiler warning	Warn about uninitialized variables that are initialized with themselves.
C.Gcc-Winline	2	Compiler warning	Warn if a function that is declared as inline cannot be inlined.
C.Gcc-Wint-conversion	1	Compiler warning	Warn about incompatible integer to pointer and pointer to integer conversions.
C.Gcc-Wint-in-bool-context	3	Compiler warning	Warn for suspicious integer expressions in boolean context.
C.Gcc-Wint-to-pointer-cast	2	Compiler warning	Warn when there is a cast to a pointer from an integer of a different size.
C.Gcc-Winteger-division	2	Compiler warning	Warn about constant integer divisions with truncated results.
C.Gcc-Wintrinsic-shadow	3	Compiler warning	Warn if a user-procedure has the same name as an intrinsic.
C.Gcc-Wintrinsics-std	3	Compiler warning	Warn on intrinsics not part of the selected standard.
C.Gcc-Winvalid-memory-model	1	Compiler warning	Warn when an atomic memory model parameter is known to be outside the valid range.
C.Gcc-Winvalid-offsetof	1	Compiler warning	Warn about invalid uses of the "offsetof" macro.
C.Gcc-Winvalid-pch	1	Compiler warning	Warn if a precompiled header is found in the search path but can't be used.
C.Gcc-Wjump-misses-init	2	Compiler warning	Warn if a "goto" statement or a "switch" statement jumps forward across the initialization of a variable, or jumps backward to a label after the variable has been initialized.
C.Gcc-Wline-truncation	5	Compiler warning	Warn about truncated source lines.
C.Gcc-Wliteral-suffix	3	Compiler warning	Warn when a string or character literal is followed by a ud-suffix which does not begin with an underscore.
C.Gcc-Wlogical-not-parentheses	3	Compiler warning	Warn when logical not is used on the left hand side operand of a comparison.
C.Gcc-Wlogical-op	2	Compiler warning	Warn about suspicious uses of logical operators in expressions.
C.Gcc-Wlong-long	5	Compiler warning	Warn if long long type is used.
C.Gcc-Wlto-type-mismatch	3	Compiler warning	During link time optimization warn about mismatched types of global declarations.
C.Gcc-Wmain	4	Compiler warning	Warn if the type of main is suspicious.
C.Gcc-Wmaybe-uninitialized	1	Compiler warning	For an automatic variable, if there exists a path from the function entry to a use of the variable that is initialized, but there exist some other paths for which the variable is not initialized, the compiler emits a warning if it cannot prove the uninitialized paths are not executed at run time.
C.Gcc-Wmemset-elt-size	2	Compiler warning	Warn about suspicious calls to memset where the third argument contains the number of elements not multiplied by the element size.
C.Gcc-Wmemset-transposed-args	1	Compiler warning	Warn about suspicious calls to memset where the third argument is constant literal zero and the second is not.
C.Gcc-Wmisleading-indentation	6	Compiler warning	Warn when the indentation of the code does not reflect the block structure.
C.Gcc-Wmissing-braces	3	Compiler warning	Warn if an aggregate or union initializer is not fully bracketed.
C.Gcc-Wmissing-declarations	3	Compiler warning	Warn if a global function is defined without a previous declaration.
C.Gcc-Wmissing-field-initializers	2	Compiler warning	Warn if a structure's initializer has some fields missing.
C.Gcc-Wmissing-include-dirs	1	Compiler warning	Warn if a user-supplied include directory does not exist.
C.Gcc-Wmissing-parameter-type	4	Compiler warning	Warn about function parameters declared without a type specifier in K&R-style functions.
C.Gcc-Wmissing-prototypes	3	Compiler warning	Warn if a global function is defined without a previous prototype declaration.
C.Gcc-Wmultichar	2	Compiler warning	Warn about use of multi-character character constants.
C.Gcc-Wmultiple-inheritance	4	Compiler warning	Warn on direct multiple inheritance.
C.Gcc-Wnamespaces	5	Compiler warning	Warn on namespace definition.
C.Gcc-Wnarrowing	2	Compiler warning	Warn when a narrowing conversion prohibited by C++11 occurs within { }.
C.Gcc-Wnested-externs	3	Compiler warning	Warn if an "extern" declaration is encountered within a function.
C.Gcc-Wnoexcept	2	Compiler warning	Warn when a noexcept-expression evaluates to false because of a call to a function that does not have a non-throwing exception specification (i.
C.Gcc-Wnoexcept-type	3	Compiler warning	Warn if C++17 noexcept function type will change the mangled name of a symbol.
C.Gcc-Wnon-template-friend	3	Compiler warning	Warn when non-templatized friend functions are declared within a template.
C.Gcc-Wnon-virtual-dtor	2	Compiler warning	Warn when a class has virtual functions and an accessible non- virtual destructor, in which case it is possible but unsafe to delete an instance of a derived class through a pointer to the base class.
C.Gcc-Wnonnull	1	Compiler warning	Warn about passing a null pointer for arguments marked as requiring a non-null value by the "nonnull" function attribute.
C.Gcc-Wnonnull-compare	2	Compiler warning	Warn if comparing pointer parameter with nonnull attribute with NULL.
C.Gcc-Wnormalized	3	Compiler warning	In ISO C and ISO C++, two identifiers are different if they are different sequences of characters.
C.Gcc-Wnull-dereference	1	Compiler warning	Warn if dereferencing a NULL pointer may lead to erroneous or undefined behavior.
C.Gcc-Wodr	2	Compiler warning	Warn about some C++ One Definition Rule violations during link time optimization.
C.Gcc-Wold-style-cast	3	Compiler warning	Warn if an old-style (C-style) cast to a non-void type is used within a C++ program.
C.Gcc-Wold-style-declaration	4	Compiler warning	Warn for obsolescent usages, according to the C Standard, in a declaration.
C.Gcc-Wold-style-definition	4	Compiler warning	Warn if an old-style function definition is used.
C.Gcc-Wopenmp-simd	4	Compiler warning	Warn if a simd directive is overridden by the vectorizer cost model.
C.Gcc-Woverflow	1	Compiler warning	Warn about overflow in arithmetic expressions.
C.Gcc-Woverlength-strings	1	Compiler warning	Warn about string constants that are longer than the "minimum maximum" length specified in the C standard.
C.Gcc-Woverloaded-virtual	2	Compiler warning	Warn when a function declaration hides virtual functions from a base class.
C.Gcc-Woverride-init	2	Compiler warning	Warn if an initialized field without side effects is overridden when using designated initializers.
C.Gcc-Woverride-init-side-effects	1	Compiler warning	Warn about overriding initializers with side effects.
C.Gcc-Wpacked	1	Compiler warning	Warn if a structure is given the packed attribute, but the packed attribute has no effect on the layout or size of the structure.
C.Gcc-Wpacked-bitfield-compat	4	Compiler warning	The 4.
C.Gcc-Wpadded	3	Compiler warning	Warn if padding is included in a structure, either to align an element of the structure or to align the whole structure.
C.Gcc-Wparentheses	4	Compiler warning	Warn if parentheses are omitted in certain contexts, such as when there is an assignment in a context where a truth value is expected, or when operators are nested whose precedence people often get confused about.
C.Gcc-Wpedantic	3	Compiler warning	Issue all the warnings demanded by strict ISO C and ISO C++; reject all programs that use forbidden extensions, and some other programs that do not follow ISO C and ISO C++.
C.Gcc-Wplacement-new	3	Compiler warning	Warn for placement new expressions with undefined behavior.
C.Gcc-Wpmf-conversions	2	Compiler warning	Warn when converting the type of pointers to member functions.
C.Gcc-Wpointer-arith	2	Compiler warning	Warn about anything that depends on the "size of" a function type or of "void".
C.Gcc-Wpointer-compare	2	Compiler warning	Warn when a pointer is compared with a zero character constant.
C.Gcc-Wpointer-sign	2	Compiler warning	Warn for pointer argument passing or assignment with different signedness.
C.Gcc-Wpointer-to-int-cast	2	Compiler warning	Warn when a pointer is cast to an integer of a different size.
C.Gcc-Wpragmas	3	Compiler warning	Warn about misuses of pragmas.
C.Gcc-Wproperty-assign-default	3	Compiler warning	Warn if a property for an Objective-C object has no assign semantics specified.
C.Gcc-Wprotocol	4	Compiler warning	Warn if inherited methods are unimplemented.
C.Gcc-Wreal-q-constant	3	Compiler warning	Warn about real-literal-constants with 'q' exponent- letter.
C.Gcc-Wrealloc-lhs	4	Compiler warning	Warn when a left-hand-side array variable is reallocated.
C.Gcc-Wrealloc-lhs-all	4	Compiler warning	Warn when a left-hand-side variable is reallocated.
C.Gcc-Wredundant-decls	2	Compiler warning	Warn if anything is declared more than once in the same scope, even in cases where multiple declaration is valid and changes nothing.
C.Gcc-Wregister	5	Compiler warning	Warn about uses of register storage specifier.
C.Gcc-Wreorder	2	Compiler warning	Warn when the order of member initializers given in the code does not match the order in which they must be executed.
C.Gcc-Wrestrict	3	Compiler warning	Warn when an argument passed to a restrict-qualified parameter aliases with another argument.
C.Gcc-Wreturn-local-addr	1	Compiler warning	Warn about returning a pointer/reference to a local or temporary variable.
C.Gcc-Wreturn-type	4	Compiler warning	Warn whenever a function is defined with a return type that defaults to "int".
C.Gcc-Wscalar-storage-order	4	Compiler warning	Warn on suspicious constructs involving reverse scalar storage order.
C.Gcc-Wselector	2	Compiler warning	Warn if multiple methods of different types for the same selector are found during compilation.
C.Gcc-Wsequence-point	2	Compiler warning	Warn about code that may have undefined semantics because of violations of sequence point rules in the C and C++ standards.
C.Gcc-Wshadow	2	Compiler warning	Warn whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed.
C.Gcc-Wshadow-ivar	2	Compiler warning	Warn if a local declaration hides an instance variable.
C.Gcc-Wshadow=compatible-local	2	Compiler warning	Warn when one local variable shadows another local variable or parameter of compatible type.
C.Gcc-Wshadow=local	2	Compiler warning	Warn when one local variable shadows another local variable or parameter.
C.Gcc-Wshift-count-negative	2	Compiler warning	Warn if shift count is negative.
C.Gcc-Wshift-count-overflow	2	Compiler warning	Warn if shift count >= width of type.
C.Gcc-Wshift-negative-value	2	Compiler warning	Warn if left shifting a negative value.
C.Gcc-Wshift-overflow	2	Compiler warning	Warn if left shift of a signed value overflows.
C.Gcc-Wsign-compare	2	Compiler warning	Warn when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned.
C.Gcc-Wsign-conversion	2	Compiler warning	Warn for implicit conversions that may change the sign of an integer value, like assigning a signed integer expression to an unsigned integer variable.
C.Gcc-Wsign-promo	2	Compiler warning	Warn when overload resolution chooses a promotion from unsigned or enumerated type to a signed type, over a conversion to an unsigned type of the same size.
C.Gcc-Wsized-deallocation	4	Compiler warning	Warn about missing sized deallocation functions.
C.Gcc-Wsizeof-array-argument	2	Compiler warning	Warn when sizeof is applied on a parameter declared as an array.
C.Gcc-Wsizeof-pointer-memaccess	3	Compiler warning	Warn for suspicious length parameters to certain string and memory built-in functions if the argument uses "sizeof".
C.Gcc-Wstack-protector	3	Compiler warning	This option is only active when -fstack-protector is active.
C.Gcc-Wstrict-aliasing	2	Compiler warning	It warns about code that might break the strict aliasing rules that the compiler is using for optimization.
C.Gcc-Wstrict-null-sentinel	5	Compiler warning	Warn about the use of an uncasted "NULL" as sentinel.
C.Gcc-Wstrict-overflow	2	Compiler warning	It warns about cases where the compiler optimizes based on the assumption that signed overflow does not occur.
C.Gcc-Wstrict-prototypes	3	Compiler warning	Warn if a function is declared or defined without specifying the argument types.
C.Gcc-Wstrict-selector-match	2	Compiler warning	Warn if multiple methods with differing argument and/or return types are found for a given selector when attempting to send a message using this selector to a receiver of type "id" or "Class".
C.Gcc-Wstringop-overflow	2	Compiler warning	Under the control of Object Size type, warn about buffer overflow in string manipulation functions like memcpy and strcpy.
C.Gcc-Wsubobject-linkage	3	Compiler warning	Warn if a class type has a base or a field whose type uses the anonymous namespace or depends on a type with no linkage.
C.Gcc-Wsuggest-attribute=const	6	Compiler warning	Warn about functions which might be candidates for __attribute__((const)).
C.Gcc-Wsuggest-attribute=format	6	Compiler warning	Warn about functions which might be candidates for format attributes.
C.Gcc-Wsuggest-attribute=noreturn	6	Compiler warning	Warn about functions which might be candidates for __attribute__((noreturn)).
C.Gcc-Wsuggest-attribute=pure	6	Compiler warning	Warn about functions which might be candidates for __attribute__((pure)).
C.Gcc-Wsuggest-final-methods	6	Compiler warning	Warn about C++ virtual methods where adding final keyword would improve code quality.
C.Gcc-Wsuggest-final-types	6	Compiler warning	Warn about C++ polymorphic types where adding final keyword would improve code quality.
C.Gcc-Wsuggest-override	4	Compiler warning	Suggest that the override keyword be used when the declaration of a virtual function overrides another.
C.Gcc-Wsurprising	2	Compiler warning	Warn about "suspicious" constructs.
C.Gcc-Wswitch	2	Compiler warning	Warn whenever a "switch" statement has an index of enumerated type and lacks a "case" for one or more of the named codes of that enumeration.
C.Gcc-Wswitch-bool	2	Compiler warning	Warn about switches with boolean controlling expression.
C.Gcc-Wswitch-default	3	Compiler warning	Warn whenever a "switch" statement does not have a "default" case.
C.Gcc-Wswitch-enum	2	Compiler warning	Warn whenever a "switch" statement has an index of enumerated type and lacks a "case" for one or more of the named codes of that enumeration.
C.Gcc-Wswitch-unreachable	1	Compiler warning	Warn about statements between switch's controlling expression and the first case.
C.Gcc-Wsync-nand	4	Compiler warning	Warn when "__sync_fetch_and_nand" and "__sync_nand_and_fetch" built-in functions are used.
C.Gcc-Wsystem-headers	3	Compiler warning	Print warning messages for constructs found in system header files.
C.Gcc-Wtarget-lifetime	2	Compiler warning	Warn if the pointer in a pointer assignment might outlive its target.
C.Gcc-Wtautological-compare	2	Compiler warning	Warn if a comparison always evaluates to true or false.
C.Gcc-Wtemplates	4	Compiler warning	Warn on primary template declaration.
C.Gcc-Wterminate	2	Compiler warning	Warn if a throw expression will always result in a call to terminate().
C.Gcc-Wtraditional	3	Compiler warning	Warn about certain constructs that behave differently in traditional and ISO C.
C.Gcc-Wtraditional-conversion	2	Compiler warning	Warn if a prototype causes a type conversion that is different from what would happen to the same argument in the absence of a prototype.
C.Gcc-Wtrampolines	2	Compiler warning	Warn about trampolines generated for pointers to nested functions.
C.Gcc-Wtrigraphs	1	Compiler warning	Most trigraphs in comments cannot affect the meaning of the program.
C.Gcc-Wtype-limits	1	Compiler warning	Warn if a comparison is always true or always false due to the limited range of the data type, but do not warn for constant expressions.
C.Gcc-Wundeclared-selector	6	Compiler warning	Warn if a "@selector(.
C.Gcc-Wundef	2	Compiler warning	Warn if an undefined identifier is evaluated in an #if directive.
C.Gcc-Wundefined-do-loop	2	Compiler warning	Warn about an invalid DO loop.
C.Gcc-Wunderflow	2	Compiler warning	Warn about underflow of numerical constant expressions.
C.Gcc-Wuninitialized	1	Compiler warning	Warn if an automatic variable is used without first being initialized or if a variable may be clobbered by a "setjmp" call.
C.Gcc-Wunknown-pragmas	1	Compiler warning	Warn when a "#pragma" directive is encountered that is not understood by GCC.
C.Gcc-Wunsuffixed-float-constants	5	Compiler warning	Issue a warning for any floating constant that does not have a suffix.
C.Gcc-Wunused-but-set-parameter	3	Compiler warning	Warn whenever a function parameter is assigned to, but otherwise unused (aside from its declaration).
C.Gcc-Wunused-but-set-variable	3	Compiler warning	Warn whenever a local variable is assigned to, but otherwise unused (aside from its declaration).
C.Gcc-Wunused-const-variable	3	Compiler warning	Warn when a const variable is unused.
C.Gcc-Wunused-dummy-argument	3	Compiler warning	Warn about unused dummy arguments.
C.Gcc-Wunused-function	3	Compiler warning	Warn whenever a static function is declared but not defined or a non-inline static function is unused.
C.Gcc-Wunused-label	3	Compiler warning	Warn whenever a label is declared but not used.
C.Gcc-Wunused-local-typedefs	3	Compiler warning	Warn when a typedef locally defined in a function is not used.
C.Gcc-Wunused-macros	5	Compiler warning	Warn about macros defined in the main file that are unused.
C.Gcc-Wunused-parameter	3	Compiler warning	Warn whenever a function parameter is unused aside from its declaration.
C.Gcc-Wunused-result	3	Compiler warning	Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value.
C.Gcc-Wunused-value	2	Compiler warning	Warn whenever a statement computes a result that is explicitly not used.
C.Gcc-Wunused-variable	3	Compiler warning	Warn whenever a local variable or non-constant static variable is unused aside from its declaration.
C.Gcc-Wuse-without-only	3	Compiler warning	Warn about USE statements that have no ONLY qualifier.
C.Gcc-Wuseless-cast	4	Compiler warning	Warn when an expression is casted to its own type.
C.Gcc-Wvarargs	4	Compiler warning	Warn upon questionable usage of the macros used to handle variable arguments like va_start.
C.Gcc-Wvariadic-macros	4	Compiler warning	Warn if variadic macros are used in pedantic ISO C90 mode, or the GNU alternate syntax when in pedantic ISO C99 mode.
C.Gcc-Wvector-operation-performance	3	Compiler warning	Warn if vector operation is not implemented via SIMD capabilities of the architecture.
C.Gcc-Wvirtual-inheritance	4	Compiler warning	Warn on direct virtual inheritance.
C.Gcc-Wvirtual-move-assign	4	Compiler warning	Warn if a virtual base has a non-trivial move assignment operator.
C.Gcc-Wvla	5	Compiler warning	Warn if variable length array is used in the code.
C.Gcc-Wvolatile-register-var	2	Compiler warning	Warn if a register variable is declared volatile.
C.Gcc-Wwrite-strings	4	Compiler warning	When compiling C, give string constants the type "const char[length]" so that copying the address of one into a non-"const" "char *" pointer produces a warning.
C.Gcc-Wzero-as-null-pointer-constant	4	Compiler warning	Warn when a literal '0' is used as null pointer constant.
